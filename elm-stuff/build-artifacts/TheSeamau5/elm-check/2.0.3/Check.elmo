Elm.Check = Elm.Check || {};
Elm.Check.make = function (_elm) {
   "use strict";
   _elm.Check = _elm.Check || {};
   if (_elm.Check.values)
   return _elm.Check.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Check",
   $Basics = Elm.Basics.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Time = Elm.Time.make(_elm);
   var rMap6 = F7(function (f,
   generatorA,
   generatorB,
   generatorC,
   generatorD,
   generatorE,
   generatorF) {
      return $Random.customGenerator(function (seed) {
         return function () {
            var $ = A2($Random.generate,
            generatorA,
            seed),
            valueA = $._0,
            seed1 = $._1;
            var $ = A2($Random.generate,
            generatorB,
            seed1),
            valueB = $._0,
            seed2 = $._1;
            var $ = A2($Random.generate,
            generatorC,
            seed2),
            valueC = $._0,
            seed3 = $._1;
            var $ = A2($Random.generate,
            generatorD,
            seed3),
            valueD = $._0,
            seed4 = $._1;
            var $ = A2($Random.generate,
            generatorE,
            seed4),
            valueE = $._0,
            seed5 = $._1;
            var $ = A2($Random.generate,
            generatorF,
            seed5),
            valueF = $._0,
            seed6 = $._1;
            return {ctor: "_Tuple2"
                   ,_0: A6(f,
                   valueA,
                   valueB,
                   valueC,
                   valueD,
                   valueE,
                   valueF)
                   ,_1: seed6};
         }();
      });
   });
   var rMap5 = F6(function (f,
   generatorA,
   generatorB,
   generatorC,
   generatorD,
   generatorE) {
      return $Random.customGenerator(function (seed) {
         return function () {
            var $ = A2($Random.generate,
            generatorA,
            seed),
            valueA = $._0,
            seed1 = $._1;
            var $ = A2($Random.generate,
            generatorB,
            seed1),
            valueB = $._0,
            seed2 = $._1;
            var $ = A2($Random.generate,
            generatorC,
            seed2),
            valueC = $._0,
            seed3 = $._1;
            var $ = A2($Random.generate,
            generatorD,
            seed3),
            valueD = $._0,
            seed4 = $._1;
            var $ = A2($Random.generate,
            generatorE,
            seed4),
            valueE = $._0,
            seed5 = $._1;
            return {ctor: "_Tuple2"
                   ,_0: A5(f,
                   valueA,
                   valueB,
                   valueC,
                   valueD,
                   valueE)
                   ,_1: seed5};
         }();
      });
   });
   var rMap4 = F5(function (f,
   generatorA,
   generatorB,
   generatorC,
   generatorD) {
      return $Random.customGenerator(function (seed) {
         return function () {
            var $ = A2($Random.generate,
            generatorA,
            seed),
            valueA = $._0,
            seed1 = $._1;
            var $ = A2($Random.generate,
            generatorB,
            seed1),
            valueB = $._0,
            seed2 = $._1;
            var $ = A2($Random.generate,
            generatorC,
            seed2),
            valueC = $._0,
            seed3 = $._1;
            var $ = A2($Random.generate,
            generatorD,
            seed3),
            valueD = $._0,
            seed4 = $._1;
            return {ctor: "_Tuple2"
                   ,_0: A4(f,
                   valueA,
                   valueB,
                   valueC,
                   valueD)
                   ,_1: seed4};
         }();
      });
   });
   var rMap3 = F4(function (f,
   generatorA,
   generatorB,
   generatorC) {
      return $Random.customGenerator(function (seed) {
         return function () {
            var $ = A2($Random.generate,
            generatorA,
            seed),
            valueA = $._0,
            seed1 = $._1;
            var $ = A2($Random.generate,
            generatorB,
            seed1),
            valueB = $._0,
            seed2 = $._1;
            var $ = A2($Random.generate,
            generatorC,
            seed2),
            valueC = $._0,
            seed3 = $._1;
            return {ctor: "_Tuple2"
                   ,_0: A3(f,valueA,valueB,valueC)
                   ,_1: seed3};
         }();
      });
   });
   var rMap2 = F3(function (f,
   generatorA,
   generatorB) {
      return $Random.customGenerator(function (seed) {
         return function () {
            var $ = A2($Random.generate,
            generatorA,
            seed),
            valueA = $._0,
            seed1 = $._1;
            var $ = A2($Random.generate,
            generatorB,
            seed1),
            valueB = $._0,
            seed2 = $._1;
            return {ctor: "_Tuple2"
                   ,_0: A2(f,valueA,valueB)
                   ,_1: seed2};
         }();
      });
   });
   var rMap = F2(function (f,
   generator) {
      return $Random.customGenerator(function (seed) {
         return function () {
            var $ = A2($Random.generate,
            generator,
            seed),
            value = $._0,
            nextSeed = $._1;
            return {ctor: "_Tuple2"
                   ,_0: f(value)
                   ,_1: nextSeed};
         }();
      });
   });
   var rZip6 = rMap6(F6(function (v0,
   v1,
   v2,
   v3,
   v4,
   v5) {
      return {ctor: "_Tuple6"
             ,_0: v0
             ,_1: v1
             ,_2: v2
             ,_3: v3
             ,_4: v4
             ,_5: v5};
   }));
   var rZip5 = rMap5(F5(function (v0,
   v1,
   v2,
   v3,
   v4) {
      return {ctor: "_Tuple5"
             ,_0: v0
             ,_1: v1
             ,_2: v2
             ,_3: v3
             ,_4: v4};
   }));
   var rZip4 = rMap4(F4(function (v0,
   v1,
   v2,
   v3) {
      return {ctor: "_Tuple4"
             ,_0: v0
             ,_1: v1
             ,_2: v2
             ,_3: v3};
   }));
   var rZip3 = rMap3(F3(function (v0,
   v1,
   v2) {
      return {ctor: "_Tuple3"
             ,_0: v0
             ,_1: v1
             ,_2: v2};
   }));
   var rZip = rMap2(F2(function (v0,
   v1) {
      return {ctor: "_Tuple2"
             ,_0: v0
             ,_1: v1};
   }));
   var printWith = F2(function (flattener,
   results) {
      return function () {
         var errorResults = A2($List.filter,
         function (result) {
            return function () {
               switch (result.ctor)
               {case "Err": return true;
                  case "Ok": return false;}
               _U.badCase($moduleName,
               "between lines 275 and 277");
            }();
         },
         results);
         return _U.eq($List.length(errorResults),
         0) ? function () {
            var _v3 = $List.length(results);
            switch (_v3)
            {case 0: return "";}
            return function () {
               var _v4 = $List.head(results);
               switch (_v4.ctor)
               {case "Err": return "";
                  case "Ok":
                  return A2($Basics._op["++"],
                    _v4._0.name,
                    A2($Basics._op["++"],
                    " has passed ",
                    A2($Basics._op["++"],
                    $Basics.toString(_v3),
                    " tests!")));}
               _U.badCase($moduleName,
               "between lines 285 and 288");
            }();
         }() : flattener(A2($List.map,
         function (result) {
            return function () {
               switch (result.ctor)
               {case "Err":
                  return A2($Basics._op["++"],
                    result._0.name,
                    A2($Basics._op["++"],
                    " has failed with the following input: ",
                    result._0.value));
                  case "Ok":
                  return A2($Basics._op["++"],
                    result._0.name,
                    A2($Basics._op["++"],
                    " has passed with the following input: ",
                    result._0.value));}
               _U.badCase($moduleName,
               "between lines 292 and 296");
            }();
         },
         errorResults));
      }();
   });
   var printOne = printWith($List.head);
   var print = function (results) {
      return A2($String.join,
      "\n",
      A2($List.map,printOne,results));
   };
   var display = function (output) {
      return function () {
         var outputString = print(output);
         return $Text.leftAligned($Text.monospace($Text.fromString(outputString)));
      }();
   };
   var printMany = printWith($String.join("\n"));
   var printVerbose = function (results) {
      return A2($String.join,
      "\n",
      A2($List.map,
      printMany,
      results));
   };
   var displayVerbose = function (output) {
      return function () {
         var outputString = printVerbose(output);
         return $Text.leftAligned($Text.monospace($Text.fromString(outputString)));
      }();
   };
   var check = F2(function (properties,
   seed) {
      return A2($List.map,
      function (f) {
         return f(seed);
      },
      properties);
   });
   var simpleCheck = function (properties) {
      return A2(check,
      properties,
      $Random.initialSeed(1));
   };
   var deepContinuousCheckEvery = F2(function (time,
   properties) {
      return A3($Signal.foldp,
      F2(function (x,y) {
         return A2($Basics._op["++"],
         x,
         y);
      }),
      _L.fromArray([]),
      A2($Signal.map,
      function ($) {
         return check(properties)($Random.initialSeed($Basics.round($)));
      },
      $Time.every(time)));
   });
   var deepContinuousCheck = deepContinuousCheckEvery($Time.second);
   var test = F3(function (name,
   predicate,
   _v10) {
      return function () {
         switch (_v10.ctor)
         {case "_Tuple2":
            return function () {
                 var toResult = function (_v14) {
                    return function () {
                       switch (_v14.ctor)
                       {case "_Tuple2":
                          return function () {
                               switch (_v14._1)
                               {case false:
                                  return $Result.Err({_: {}
                                                     ,name: name
                                                     ,seed: _v10._1
                                                     ,value: $Basics.toString(_v14._0)});
                                  case true:
                                  return $Result.Ok({_: {}
                                                    ,name: name
                                                    ,seed: _v10._1
                                                    ,value: $Basics.toString(_v14._0)});}
                               _U.badCase($moduleName,
                               "between lines 116 and 119");
                            }();}
                       _U.badCase($moduleName,
                       "between lines 116 and 119");
                    }();
                 };
                 var testResults = A2($List.map,
                 function (t) {
                    return {ctor: "_Tuple2"
                           ,_0: t
                           ,_1: predicate(t)};
                 },
                 _v10._0);
                 return A2($List.map,
                 toResult,
                 testResults);
              }();}
         _U.badCase($moduleName,
         "between lines 114 and 120");
      }();
   });
   var generateTestCases = F2(function (listGenerator,
   seed) {
      return A2($Random.generate,
      listGenerator,
      seed);
   });
   var propertyN = F5(function (numberOfTests,
   name,
   predicate,
   generator,
   seed) {
      return function () {
         var listGenerator = A2($Random.list,
         numberOfTests,
         generator);
         var testCases = A2(generateTestCases,
         listGenerator,
         seed);
         return A3(test,
         name,
         predicate,
         testCases);
      }();
   });
   var property2N = F5(function (numberOfTests,
   name,
   predicate,
   generatorA,
   generatorB) {
      return A4(propertyN,
      numberOfTests,
      name,
      function (_v19) {
         return function () {
            switch (_v19.ctor)
            {case "_Tuple2":
               return A2(predicate,
                 _v19._0,
                 _v19._1);}
            _U.badCase($moduleName,
            "on line 145, column 43 to 56");
         }();
      },
      A2(rZip,generatorA,generatorB));
   });
   var property3N = F6(function (numberOfTests,
   name,
   predicate,
   generatorA,
   generatorB,
   generatorC) {
      return A4(propertyN,
      numberOfTests,
      name,
      function (_v23) {
         return function () {
            switch (_v23.ctor)
            {case "_Tuple3":
               return A3(predicate,
                 _v23._0,
                 _v23._1,
                 _v23._2);}
            _U.badCase($moduleName,
            "on line 151, column 45 to 60");
         }();
      },
      A3(rZip3,
      generatorA,
      generatorB,
      generatorC));
   });
   var property4N = F7(function (numberOfTests,
   name,
   predicate,
   generatorA,
   generatorB,
   generatorC,
   generatorD) {
      return A4(propertyN,
      numberOfTests,
      name,
      function (_v28) {
         return function () {
            switch (_v28.ctor)
            {case "_Tuple4":
               return A4(predicate,
                 _v28._0,
                 _v28._1,
                 _v28._2,
                 _v28._3);}
            _U.badCase($moduleName,
            "on line 157, column 47 to 64");
         }();
      },
      A4(rZip4,
      generatorA,
      generatorB,
      generatorC,
      generatorD));
   });
   var property5N = F8(function (numberOfTests,
   name,
   predicate,
   generatorA,
   generatorB,
   generatorC,
   generatorD,
   generatorE) {
      return A4(propertyN,
      numberOfTests,
      name,
      function (_v34) {
         return function () {
            switch (_v34.ctor)
            {case "_Tuple5":
               return A5(predicate,
                 _v34._0,
                 _v34._1,
                 _v34._2,
                 _v34._3,
                 _v34._4);}
            _U.badCase($moduleName,
            "on line 163, column 49 to 68");
         }();
      },
      A5(rZip5,
      generatorA,
      generatorB,
      generatorC,
      generatorD,
      generatorE));
   });
   var property = propertyN(100);
   var property2 = F4(function (name,
   predicate,
   generatorA,
   generatorB) {
      return A3(property,
      name,
      function (_v41) {
         return function () {
            switch (_v41.ctor)
            {case "_Tuple2":
               return A2(predicate,
                 _v41._0,
                 _v41._1);}
            _U.badCase($moduleName,
            "on line 189, column 28 to 41");
         }();
      },
      A2(rZip,generatorA,generatorB));
   });
   var property3 = F5(function (name,
   predicate,
   generatorA,
   generatorB,
   generatorC) {
      return A3(property,
      name,
      function (_v45) {
         return function () {
            switch (_v45.ctor)
            {case "_Tuple3":
               return A3(predicate,
                 _v45._0,
                 _v45._1,
                 _v45._2);}
            _U.badCase($moduleName,
            "on line 195, column 30 to 45");
         }();
      },
      A3(rZip3,
      generatorA,
      generatorB,
      generatorC));
   });
   var property4 = F6(function (name,
   predicate,
   generatorA,
   generatorB,
   generatorC,
   generatorD) {
      return A3(property,
      name,
      function (_v50) {
         return function () {
            switch (_v50.ctor)
            {case "_Tuple4":
               return A4(predicate,
                 _v50._0,
                 _v50._1,
                 _v50._2,
                 _v50._3);}
            _U.badCase($moduleName,
            "on line 201, column 32 to 49");
         }();
      },
      A4(rZip4,
      generatorA,
      generatorB,
      generatorC,
      generatorD));
   });
   var property5 = F7(function (name,
   predicate,
   generatorA,
   generatorB,
   generatorC,
   generatorD,
   generatorE) {
      return A3(property,
      name,
      function (_v56) {
         return function () {
            switch (_v56.ctor)
            {case "_Tuple5":
               return A5(predicate,
                 _v56._0,
                 _v56._1,
                 _v56._2,
                 _v56._3,
                 _v56._4);}
            _U.badCase($moduleName,
            "on line 207, column 34 to 53");
         }();
      },
      A5(rZip5,
      generatorA,
      generatorB,
      generatorC,
      generatorD,
      generatorE));
   });
   var property6 = F8(function (name,
   predicate,
   generatorA,
   generatorB,
   generatorC,
   generatorD,
   generatorE,
   generatorF) {
      return A3(property,
      name,
      function (_v63) {
         return function () {
            switch (_v63.ctor)
            {case "_Tuple6":
               return A6(predicate,
                 _v63._0,
                 _v63._1,
                 _v63._2,
                 _v63._3,
                 _v63._4,
                 _v63._5);}
            _U.badCase($moduleName,
            "on line 213, column 36 to 57");
         }();
      },
      A6(rZip6,
      generatorA,
      generatorB,
      generatorC,
      generatorD,
      generatorE,
      generatorF));
   });
   var mergeTestResult = F2(function (result1,
   result2) {
      return function () {
         switch (result1.ctor)
         {case "Err":
            return $Result.Err(result1._0);
            case "Ok": return function () {
                 switch (result2.ctor)
                 {case "Err":
                    return $Result.Err(result2._0);
                    case "Ok":
                    return $Result.Ok(result1._0);}
                 _U.badCase($moduleName,
                 "between lines 77 and 79");
              }();}
         _U.badCase($moduleName,
         "between lines 74 and 79");
      }();
   });
   var mergeTestResults = F2(function (results1,
   results2) {
      return function () {
         var errorResults = A2($List.filter,
         function (result) {
            return function () {
               switch (result.ctor)
               {case "Err": return true;
                  case "Ok": return false;}
               _U.badCase($moduleName,
               "between lines 86 and 88");
            }();
         },
         results1);
         return function () {
            var _v80 = $List.length(errorResults);
            switch (_v80)
            {case 0: return A3($List.map2,
                 mergeTestResult,
                 results1,
                 results2);}
            return errorResults;
         }();
      }();
   });
   var mergeTestOutputs = F2(function (output1,
   output2) {
      return function () {
         switch (output1.ctor)
         {case "::": return function () {
                 switch (output2.ctor)
                 {case "::":
                    return A2($List._op["::"],
                      A2(mergeTestResults,
                      output1._0,
                      output2._0),
                      A2(mergeTestOutputs,
                      output1._1,
                      output2._1));
                    case "[]": return output1;}
                 _U.badCase($moduleName,
                 "between lines 102 and 105");
              }();
            case "[]": return output2;}
         _U.badCase($moduleName,
         "between lines 99 and 105");
      }();
   });
   var continuousCheckEvery = F2(function (time,
   properties) {
      return A3($Signal.foldp,
      mergeTestOutputs,
      _L.fromArray([]),
      A2($Signal.map,
      function ($) {
         return check(properties)($Random.initialSeed($Basics.round($)));
      },
      $Time.every(time)));
   });
   var continuousCheck = continuousCheckEvery($Time.second);
   var Success = F3(function (a,
   b,
   c) {
      return {_: {}
             ,name: a
             ,seed: c
             ,value: b};
   });
   var Error = F3(function (a,
   b,
   c) {
      return {_: {}
             ,name: a
             ,seed: c
             ,value: b};
   });
   _elm.Check.values = {_op: _op
                       ,property: property
                       ,property2: property2
                       ,property3: property3
                       ,property4: property4
                       ,property5: property5
                       ,property6: property6
                       ,propertyN: propertyN
                       ,property2N: property2N
                       ,property3N: property3N
                       ,property4N: property4N
                       ,property5N: property5N
                       ,check: check
                       ,simpleCheck: simpleCheck
                       ,continuousCheck: continuousCheck
                       ,continuousCheckEvery: continuousCheckEvery
                       ,deepContinuousCheck: deepContinuousCheck
                       ,deepContinuousCheckEvery: deepContinuousCheckEvery
                       ,print: print
                       ,printVerbose: printVerbose
                       ,display: display
                       ,displayVerbose: displayVerbose};
   return _elm.Check.values;
};